建造者模式 : 可以将复杂对象的建筑过程抽象出来,使这个抽象过程的不同实现方式可以构造出不同的对象

    需求 : 建房子流程 ->打地基->砌墙->封顶,虽然建房子的流程都一样,但是对于不同的房子,具体的操作可能就不一样了

	old方式
	缺点 : 把产品(房子)和创建产品的过程(即建房子的流程)封装在一起,耦合性太强
	解决 : 将产品和产品的建造过程解耦 -> 建造者模式

建造者模式的四个角色 :
	产品 : 一个具体的产品对象
    抽象建造者 : 创建一个产品对象的各个部件指定的接口/抽象类
    具体建造者 : 实现接口,构建和装配各个部件
    指挥者 : 构建一个使用抽象建造者接口的对象,负责控制产品对象的生产过程,隔离客户与对象的生产过程

抽象工厂模式 vs 建造者模式
	抽象工厂模式 : 实现对产品家族的创建,一个产品家族就是一系列的产品,具有不同分类维度的产品组合,
	              采用抽象工厂模式不用关心构建过程,只关心差评由什么工程生产即可
	建造者模式 : 要求按照指定蓝图建造产品,主要目的是通过组装零配件而产生一个新的产品